plugins {
    id 'java'
    id 'groovy'
    id 'application'
}

group 'otus.spring.2018-06'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8


/* ************************************************************************** */
/*                         Dependencies Configuration                         */
/* ************************************************************************** */

repositories {
    jcenter()
}

ext {
    springVersion = '5.0.7.RELEASE'
    springTest = '5.0.7.RELEASE'
    openCsvVersion = '4.2'
    spockVersion = '1.1-groovy-2.4'
    junitVersion = '4.12'
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation "org.springframework:spring-context:$springVersion"

    // https://mvnrepository.com/artifact/org.springframework/spring-test
    testCompile "org.springframework:spring-test:$springTest"

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation "com.opencsv:opencsv:$openCsvVersion"

    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testCompile "org.spockframework:spock-core:$spockVersion"

    // https://mvnrepository.com/artifact/junit/junit
    testCompile "junit:junit:$junitVersion"
}

/* ************************************************************************** */
/*                            Custom Task Configuration                       */
/* ************************************************************************** */

clean {
    delete 'out'
}

/* ************************************************************************** */
/*                          Executable Jar configuration                      */
/* ************************************************************************** */

project.mainClassName = "com.otus.spring.main.App"

task fatJar(type: Jar) {
    archiveName = "otus-spring-hw-01-fatjar.${extension}"
    manifest {
        attributes(
            "Implementation-Title": "Otus Spring 06/2018",
            "Implementation-Version": version,
            "Main-Class": mainClassName
        )
    }
    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}
